## Enterprise Architecture
- Business Architecture
- Application Architecture
- Information/Data Architecture
- IT Architecture

## Application Architecture
Architecture is driven by 
 - Patterns/StyleNov2019#
 - Communication
 - Constraints
 
## Architectural Patterns/Style
1 Layered
2 Micro-Kernel
3 Service based
4 Modular
5 Event Driven
6 Pipeline (pipes & filter)
7 Space-based
8 Micro-service  

## Classification parameters
1 Monolithic
2 Distributed
3 Component
4 Communication
5 Structure
6 Deployment
7 Domain
Now, distributed vs Monolithic way of classification is more prominent.

## Design Principles
### SOLID 
	- Single Responsibility
	- Open-Close
	- Liskov Substitution
	- Interface Segregation
	- Dependency Inversion

## Architectural Design/Quality Attributes

 1 - Performance â€“ shows the response of the system to performing certain actions for a certain period of time.
 2 - Interoperability - is an attribute of the system or part of the system that is responsible for its operation and the transmission of data and its exchange 	with other external systems.
 3 - Usability - is one of the most important attributes, because, unlike in cases with other attributes, users can see directly how well this attribute of the system is worked out.
 4 - Reliability (Fault tolerant) - is an attribute of the system responsible for the ability to continue to operate under predefined conditions.
 5 - Availability is part of reliability and is expressed as the ratio of the available system time to the total working time.
 6 - Security - is responsible for the ability of the system to reduce the likelihood of malicious or accidental actions as well as the possibility of theft or loss of information.
 7 - Maintainability - is the ability of the system to support changes.
 8 - Modifiability  - determines how many common changes need to be made to the system to make changes to each individual item.
 9 - Testability - shows how well the system allows performing tests, according to predefined criteria.
 10- Scalability - is the ability of the system to handle load increases without decreasing performance, or the possibility to rapidly increase the load.
 11- Re-usability - is a chance of using a component or system in other components/systems with small or no change.
 12- Supportability - is the ability of the system to provide useful information for identifying and solving problems.



--------------------------------------------------------
## Reference
https://towardsdatascience.com/5-key-principles-of-software-architecture-e5379cb10fd5
https://www.tutorialspoint.com/software_architecture_design/key_principles.htm
https://www.amazon.co.uk/Software-Architects-Handbook-implementing-architecture/dp/1788624068
https://www.developertoarchitect.com/lessons/
http://www.softwarearchitectures.com/qa.html
https://github.com/vaquarkhan/microservices-recipes-a-free-gitbook
MSG Architecture - http://verraes.net/2019/05/ddd-msg-arch/
SAGA Pattern - https://itnext.io/microservices-architecture-an-implementation-of-saga-pattern-dbbe5d881c78
LAMBDA Architecure - https://www.youtube.com/watch?v=tpspO9K28PM


